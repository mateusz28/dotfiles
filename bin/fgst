#!/bin/bash
# fgst - pick files from `git status -s` 
is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

fgst() {
  # "Nothing to see here, move along"
  #preview="echo {s} | cut -c 3- | sed 's/^\(.*\)|.*$/\1/;s/^[   ]*//;s/[    ]*$//' "
  preview='
    file="$(echo {s} | cut -c 4-)"
    if git diff --color=always HEAD -- "$file" | grep -q .; then
      git diff --color=always HEAD -- "$file" | tail -n +5
    elif git ls-files --others --exclude-standard -- "$file" | grep -q .; then
      [ -f "$file" ] && bat --color=always --style=plain --line-range=:40 "$file"
    fi
  '
  is_in_git_repo || return

  local cmd="${FZF_CTRL_T_COMMAND:-"command git -c color.status=always status -s"}"

  eval "$cmd" | FZF_DEFAULT_OPTS="--ansi --height ${FZF_TMUX_HEIGHT:-40%} --reverse $FZF_DEFAULT_OPTS $FZF_CTRL_T_OPTS" fzf  --preview-window=nohidden --preview "$preview" -m "$@"| while read -r item; do
    echo "$item" | cut -c 3-
  done
  echo
}
fgst
