snippet mpr
mprintf("${1:%s}\r\n"${2});
endsnippet

snippet kpr
printk("${1:%s} | %s:%d\r\n"${2},__FILE__, __LINE__);
endsnippet

# for (custom)
snippet for
for (${1:i} = ${2:0}; $1 ${3:< 10}; $1${4:++}) 
{
	${5}
}
endsnippet	

snippet if
if (${1:true}) 
{
	${0}
}
endsnippet

snippet ife
if (${1:true}) 
{
	${2}
}
else 
{
	${0}
}
endsnippet

snippet deb
DEB("${1:%s}\n"${2});
endsnippet

# typedef enum
snippet tde
typedef enum {
	${2:Data} 
} ${1:foo}_t;
endsnippet

snippet tds
typedef struct ${2:_$1 }{
	m_${3:Data} 
} ${1:`vim_snippets#Filename('$1_t', 'name')`};
endsnippet

snippet tdx
typedef enum {
	${2:Data} 
} ${1:foo}Strings_t;

const char* $1Strings[]={
	[$2] = "",
};

endsnippet
